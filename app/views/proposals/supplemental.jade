extends ../head

append css
	link(rel='stylesheet', href='/css/supplemental.css')

append js
	script(src='/js/supplemental.js')

block content
	.container
		.row
			.col-md-9.col-sm-12
				.row
					.col-xs-8.col-sm-9
						h2 #{supplemental.Title}
					.col-xs-4.col-sm-3
						a(href='/proposals/#{proposal.Year}/#{proposal.Number}')
							button.btn.btn-primary.proposalView View Proposal
				p.subtitle by #{supplemental.Author}
				p #{supplemental.Abstract}

			.col-md-3.col-sm-12
				if isAdmin || isCommitteeMember || editor
					if isAdmin || isCommitteeMember
						h3 Voting
						if supplemental.Status == 0
							if vote 
								form
									select(name='voteDecision' disabled).form-control
										option(value='1') Approve
										option(value='0') Deny
									button(disabled)#voteButton.btn Submit
									if vote.Value == 1
										p You have already voted to approve this supplemental
									if vote.Value == 0
										p You have already voted to deny this supplemental
							else 
								form(method='post', action='/api/v1/vote/supplemental/#{supplemental.id}')
									select(name='voteDecision').form-control
										option(value='1') Approve
										option(value='0') Deny
									button#voteButton.btn Submit
						if supplemental.Status == 1
							p This supplemental has been approved.
						if supplemental.Status == 2
							p this supplemental has been denied.
						p #{votesNo} x Deny
						p #{votesYes} x Approve
					hr
					if isAdmin || (editor && supplemental.Status == 0)
						h3 Editor
						p You have edit access to this supplemental.
						a(href='/supplemental/#{supplemental.id}/0') Edit Supplemental
					br

		.row
			if isPartial
				+triColumn()
			else
				+biColumn()


mixin biColumn()
	table.table
		thead
			tr
				th(colspan='2')
				th(colspan='3'): h3 Original
				th(colspan='3'): h3 Supplemental
					
			tr
				th Name
				th
				th Cost
				th Qty
				th Total
				th Cost
				th Qty
				th Total

		tbody

			- var totalProp = 0
			- var totalSup = 0
			- var l = 0 //- row number for descriptions
			- var n = 0; //- loop number

			while true

				- i = itemsProp[n]
				- if (i != undefined && i != null)
					- totalProp += i.Quantity * i.Price

				- j = itemsSup[n]
				- if (j != undefined && j != null)
					- totalSup += j.Quantity * j.Price

				if i == null && j == null 
					- break;


				- var last = null;
				- var precols = 0;

				//- an item row
				tr 
					//- does i exist?
					if i != undefined && i != null 
						//- i exists, print i
						+print(null, i, precols, l, true)
					else
						- precols += 3

				
					//- does j exist?
					if j != undefined && j != null
						//- j exists, is j the same as i?
						if (i == undefined || i == null) 
							+print(i, j, precols, l, true)

						else if (i.ItemName.trim() == j.ItemName.trim() && i.Description.trim() == j.Description.trim() && i.Justification.trim() == j.Justification.trim())
							+print(i, j, precols, l, false)
						
						else
							td(colspan='3')
							- precols += 3
							if i
								+desc(l, i)
								-l ++
							+print(null, j, precols, l, true)

						+desc(l, j)
						-l++


					else
						td(colspan='3')
						+desc(l, i)
						-l++;


				- n++;


			tr
				td: b Total 
				td(colspan='3')
				td: b
					+format(totalProp)
				td #{((totalProp > totalSup) ? '-' : '+')} 
					+format(Math.abs(totalProp - totalSup))
				td =
				td: b
					+format(totalSup)




			//- for i, n in itemsProp
			//- 	- a = n
			//- 	- totalProp += i.Quantity * i.Price
			//- 	- j = itemsSup[n]
			//- 	- totalSup += j.Quantity * j.Price


			//- 	tr
			//- 		td #{i.ItemName} 


			//- 		td 
			//- 			button(id='buttonShow#{k}').btnShow.btn: span.glyphicon.glyphicon-menu-down
			//- 			button(id='buttonHide#{k}').btnHide.hidden.btn.btn-danger: span.glyphicon.glyphicon-menu-up
					

			//- 		td
			//- 			+format(i.Price)


			//- 		td #{i.Quantity}


			//- 		td
			//- 			+format(i.Quantity * i.Price)
		

			//- 		if i.ItemName.trim() == j.ItemName.trim() && i.Description.trim() == j.Description.trim() && i.Justification.trim() == j.Justification.trim()
			//- 			if j.Price != i.Price
			//- 				td: b 
			//- 					+format(j.Price)
			//- 			else 
			//- 				td 
			//- 					+format(j.Price)



			//- 			if j.Quantity != i.Quantity
			//- 				td: b #{j.Quantity}
			//- 			else
			//- 				td #{j.Quantity}


			//- 			if j.Quantity * j.Price != i.Quantity * i.Price
			//- 				td: b
			//- 					+format(j.Quantity * j.Price)
			//- 			else
			//- 				td 
			//- 					+format(j.Quantity * j.Price)


			//- 			tr(id='desc#{k}').hidden
			//- 				- k++
			//- 				td(colspan='8')= i.Description + i.Justification



			//- 		else
			//- 			td(colspan='3')
			//- 			tr(id='desc#{k}').hidden
			//- 				- k++
			//- 				td(colspan='8')= i.Description + i.Justification
			//- 			tr
			//- 				td #{j.ItemName}
			//- 				td 
			//- 					button(id='buttonShow#{k}').btnShow.btn: span.glyphicon.glyphicon-menu-down
			//- 					button(id='buttonHide#{k}').btnHide.hidden.btn.btn-danger: span.glyphicon.glyphicon-menu-up
			//- 				td(colspan='3')
			//- 				td: b 
			//- 					+format(j.Price)
			//- 				td: b #{j.Quantity}
			//- 				td: b 
			//- 					+format(j.Price * j.Quantity)
			//- 			tr(id='desc#{k}').hidden
			//- 				- k++
			//- 				td(colspan='8')= j.Description + j.Justification
			

			//- - a++
			//- - for (var n = a; n < itemsSup.length; n++)
			//- 	- j = itemsSup[n]
			//- 	- totalSup += j.Quantity * j.Price
			//- 	tr
			//- 		td #{j.ItemName}
			//- 		td 
			//- 			button(id='buttonShow#{k}').btnShow.btn: span.glyphicon.glyphicon-menu-down
			//- 			button(id='buttonHide#{k}').btnHide.hidden.btn.btn-danger: span.glyphicon.glyphicon-menu-up

			//- 		td(colspan='3')


			//- 		td: b
			//- 			+format(j.Price)

			//- 		td: b  #{j.Quantity}

			//- 		td: b
			//- 			+format(j.Price * j.Quantity)

			//- 		tr(id='desc#{k}').hidden
			//- 			- k++
			//- 			td(colspan='8')= j.Description + j.Justification




			//- tr
			//- 	td: b Total 
			//- 	td(colspan='3')
			//- 	td: b
			//- 		+format(totalProp)
			//- 	td #{((totalProp > totalSup) ? '-' : '+')} 
			//- 		+format(Math.abs(totalProp - totalSup))
			//- 	td =
			//- 	td: b
			//- 		+format(totalSup)






mixin triColumn()
	table.table
		thead
			tr
				th(colspan='2')
				th(colspan='3'): h3 Original
				th(colspan='3'): h3 Funded
				th(colspan='3'): h3 Supplemental
					
			tr
				th Name
				th
				th Cost
				th Qty
				th Total
				th Cost
				th Qty
				th Total
				th Cost
				th Qty
				th Total

		tbody
			- var totalProp = 0
			- var totalPart = 0
			- var totalSup = 0
			- var l = 0 //- row number for descriptions
			- var n = 0; //- loop number

			while true

				- i = itemsProp[n]
				- if (i != undefined && i != null)
					- totalProp += i.Quantity * i.Price

				- j = itemsPart[n]
				- if (j != undefined && j != null)
					- totalPart += j.Quantity * j.Price
				
				- k = itemsSup[n]
				- if (k != undefined && k != null)
					- totalSup += k.Quantity * k.Price

				if i == null && j == null && k == null
					- break;


				- var last = null;
				- var precols = 0;

				//- an item row
				tr 
					//- does i exist?
					if i != undefined && i != null 
						//- i exists, print i
						+print(null, i, precols, l, true)
					else
						- precols += 3
					- last = i

		
					//- does j exist?
					if j != undefined && j != null
						//- j exists, is j the same as last?
						if (last == undefined || last == null) || (last.ItemName.trim() == j.ItemName.trim() && last.Description.trim() == j.Description.trim() && last.Justification.trim() == j.Justification.trim())
							+print(last, j, precols, l, false)
						else
							td(colspan='6')
							- precols += 3
							if last
								+desc(l, last)
								-l ++
							+print(null, j, precols, l, true)

						- last = j
					else
						- precols += 3
						td(colspan='3')



					if k != undefined && k != null
						if (last == undefined || last == null) || (last.ItemName.trim() == k.ItemName.trim() && last.Description.trim() == j.Description.trim() && last.Justification.trim() == j.Justification.trim())
							+print(last, k, precols, l, false)
							+desc(l, k)
							-l++
						else
							td(colspan='3')
							-precols += 3
							if last
								+desc(l, last)
								-l++
							+print(null, k, precols, l, true)
							+desc(l, last)
							-l++

				- n++;


							//- if j.Price != i.Price
					//- 			td: b 
					//- 				+format(j.Price)
					//- 		else 
					//- 			td $#{j.Price}


					//- 		if j.Quantity != i.Quantity
					//- 			td: b #{j.Quantity}
					//- 		else
					//- 			td #{j.Quantity}


					//- 		if j.Quantity * j.Price != i.Quantity * i.Price
					//- 			td: b
					//- 				+format(j.Quantity * j.Price)
					//- 		else
					//- 			td 
					//- 				+format(j.Quantity * j.Price)




					//- else 
					//- 	//- j does not exist
					//- 	td(colspan='3')
					//- 	//-tr
					//- 		td #{j.ItemName}
					//- 		td 
					//- 			button(id='buttonShow#{l}').btnShow.btn: span.glyphicon.glyphicon-menu-down #{l}b
					//- 			button(id='buttonHide#{l}').btnHide.hidden.btn.btn-danger: span.glyphicon.glyphicon-menu-up #{l}b
					//- 		td(colspan='3')
					//- 		td: b $#{j.Price}
					//- 		td: b #{j.Quantity}
					//- 		td: b $#{j.Price * j.Quantity}

					//- 		if k != null && k != undefined && k.ItemName.trim() == j.ItemName.trim() && k.Description.trim() == j.Description.trim() && k.Justification.trim() == j.Justification.trim()
					//- 			if j.Price != k.Price
					//- 				td: b 
					//- 					+format(k.Quantity * k.Price)
					//- 			else 
					//- 				td $#{k.Price}


					//- 			if j.Quantity != k.Quantity
					//- 				td: b #{k.Quantity}
					//- 			else
					//- 				td #{k.Quantity}


					//- 			if j.Quantity * j.Price != k.Quantity * k.Price
					//- 				td: b
					//- 					+format(k.Quantity * k.Price)
					//- 			else
					//- 				td 
					//- 					+format(k.Quantity * k.Price)
					//- 		else
					//- 			td(colspan='3')


					//- 		tr(id='desc#{l}').hidden
					//- 			- l++
					//- 			td(colspan='11')= j.Description + j.Justification



					//- if k != undefined && k != null
					//- 	if k.ItemName.trim() == last.ItemName.trim() && k.Description.trim() == last.Description.trim() && k.Justification.trim() == last.Justification.trim()

					//- 		if last.Price != k.Price
					//- 			td: b 
					//- 				+format(k.Quantity * k.Price)
					//- 		else 
					//- 			td $#{k.Price}


					//- 		if last.Quantity != k.Quantity
					//- 			td: b #{k.Quantity}
					//- 		else
					//- 			td #{k.Quantity}


					//- 		if last.Quantity * last.Price != k.Quantity * k.Price
					//- 			td: b
					//- 				+format(k.Quantity * k.Price)
					//- 		else
					//- 			td 
					//- 				+format(k.Quantity * k.Price)


					//- 		tr(id='desc#{l}').hidden
					//- 			- l++
					//- 			td(colspan='11')= k.Description + k.Justification



					//- 	else 
					//- 		//- an item or desc or something is different from funded to supp
					//- 		td(colspan='9') hurr
					//- 		tr(id='desc#{l}').hidden
					//- 			- l++
					//- 			td(colspan='11')= k.Description + k.Justification
					//- 		tr
					//- 			td #{k.ItemName}
					//- 			td 
					//- 				button(id='buttonShow#{l}').btnShow.btn: span.glyphicon.glyphicon-menu-down #{l}c
					//- 				button(id='buttonHide#{l}').btnHide.hidden.btn.btn-danger: span.glyphicon.glyphicon-menu-up #{l}c
					//- 			td(colspan='3')
					//- 			td: b $#{k.Price}
					//- 			td: b #{k.Quantity}
					//- 			td: b $#{k.Price * k.Quantity}


					//- else 
					//- 	//- we've run out of supplemental items to compare
					//- 	- for (var n = a; n < itemsSup.length; n++)
					//- 		- k = itemsSup[n]
					//- 		tr
					//- 			td #{k.ItemName}







			tr
				td: b Total 
				td(colspan='3')
				td: b
					+format(totalProp)
				td #{((totalProp > totalPart) ? '-' : '+')} 
					+format(Math.abs(totalProp - totalPart))
				td =
				td: b
					+format(totalPart)
				td #{((totalPart > totalSup) ? '-' : '+')} 
					+format(Math.abs(totalPart - totalSup))
				td =
				td: b
					+format(totalSup)



mixin format(num)
	| #{'$' + (Math.round(num * 100) / 100).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}


mixin print(y, z, precols, l, named)
	if named
		td #{z.ItemName}

		td 
			button(id='buttonShow#{l}').btnShow.btn: span.glyphicon.glyphicon-menu-down #{l}
			button(id='buttonHide#{l}').btnHide.hidden.btn.btn-danger: span.glyphicon.glyphicon-menu-up #{l}

	if precols
		td(colspan='#{precols}')

	if y != null && y.Price != z.Price
		td: b 
			+format(z.Price)
	else 
		td $#{z.Price}


	if y != null && y.Quantity != z.Quantity
		td: b #{z.Quantity}
	else
		td #{z.Quantity}


	if y != null && y.Quantity * y.Price != z.Quantity * z.Price
		td: b
			+format(z.Quantity * z.Price)
	else
		td 
			+format(z.Quantity * z.Price)


mixin desc(l, z)
	tr(id='desc#{l}').hidden
		td(colspan='11')= z.Description + z.Justification